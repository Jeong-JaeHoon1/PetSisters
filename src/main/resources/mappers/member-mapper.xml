<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="memberMapper">

	<resultMap id="memberResultSet" type="member">
		<result column="USER_NO" property="userNo" />
		<result column="USER_ID" property="userId" />
		<result column="USER_PWD" property="userPwd" />
		<result column="USER_NAME" property="userName" />
		<result column="USER_SSN" property="userSsn" />
		<result column="USER_NICKNAME" property="userNickname" />
		<result column="PHONE" property="phone" />
		<result column="EMAIL" property="email" />
		<result column="ADDRESS" property="address" />
		<result column="GENDER" property="gender" />
		<result column="SITTER_STATUS" property="sitterStatus" />
		<result column="CA_DATE" property="caDate" />
		<result column="CA_STATUS" property="caStatus" />
		<result column="STATUS" property="status" />
		<result column="FILE_PATH" property="filePath" />
		<result column="ENROLL_DATE" property="enrollDate" />
		<result column="P_NO" property="petsitterNo" />
	</resultMap>
	
	<resultMap id="dogResultSet" type="dog">
		<result column="DOG_NO" property="dogNo" />
		<result column="DOG_NAME" property="dogName" />
		<result column="DOG_GENDER" property="dogGender" />
		<result column="DOG_BREED" property="dogBreed" />
		<result column="DOG_BIRTHDAY" property="dogBirthday" />
		<result column="DOG_WEIGHT" property="dogWeight" />
		<result column="NEUTRALIZATION_STATUS" property="neutralizationStatus" />
		<result column="DOG_NOTE" property="dogNote" />
		<result column="FILE_PATH" property="filePath" />
		<result column="STATUS" property="status" />
		<result column="USERID" property="userId" />
	</resultMap>
	
	<!-- PETSITTER 객체로 가공된 resultMap -->
	<resultMap id="petSitterResultSet" type="petSitter">
		<result column="P_NO" property="petSitterNo" />
		<result column="P_TITLE" property="petSitterTitle" />
		<result column="P_CONTENT" property="petSitterContent" />
		<result column="P_SERVICE" property="petSitterService" />
		<result column="CARE_LIST" property="careList" />
		<result column="P_MODE" property="petSitterMode" />
		<result column="USER_NO" property="userNo" />		
		<result column="USER_NAME" property="userName" />
		<result column="ADDRESS" property="address" />
		<result column="CA_STATUS" property="caStatus" />
		<result column="FILE_PATH" property="userFilePath" />
		<result column="START_DATE" property="startDate" />		
		<result column="END_DATE" property="endDate" />
		<result column="REF_PNO" property="refPno" />
		<result column="REVIEW_COUNT" property="reviewCount" />	
		<result column="CHANGE_NAME" property="changeName" />
		<result column="FILE_PATH" property="paFilePath" />
	</resultMap>
	
	<resultMap id="boardResultSet" type="board">
		<result column="B_NO" property="boardNo" />
		<result column="B_TITLE" property="boardTitle" />
		<result column="B_CONTENT" property="boardContent" />
		<result column="CREATE_DATE" property="createDate" />
		<result column="STATUS" property="status" />
		<result column="COUNT" property="count" />
		<result column="USER_NO" property="userNo" />
		<result column="CATEGORY_MAIN" property="categoryMain" />
		<result column="CATEGORY_SUB" property="categorySub" />
		<result column="DOG_NAME" property="dogName" />
		<result column="DOG_BREED" property="dogBreed" />
		<result column="DOG_GENDER" property="dogGender" />
		<result column="M_USER_NAME" property="userName" />
		<result column="FILE_PATH" property="filePath" />
		<result column="ORIGIN_NAME" property="originName" />
		<result column="CHANGE_NAME" property="changeName" />
		<result column="AT_FILE_PATH" property="atFilePath" />
		<result column="DOG_FILE_PATH" property="dogFilePath" />
		<result column="DOG_FILE_PATH" property="dogBirth" />
		<result column="REPLY_COUNT" property="replyCount" />
	</resultMap>
	
	<!-- 로그인 기능 -->
	<select id="loginMember" parameterType="member" resultMap="memberResultSet">
		SELECT M.*, P.P_NO
		    FROM MEMBER M
		    LEFT JOIN PETSITTER P ON M.USER_NO = P.USER_NO
	    WHERE M.USER_ID = #{userId}
	        AND M.STATUS = 'Y'
	</select>
	
	<!-- 회원추가 기능 -->
	<insert id="insertMember" parameterType="member">
	INSERT INTO MEMBER(USER_NO
					 , USER_ID
					 , USER_NICKNAME
					 , USER_PWD
					 , USER_NAME
					 , USER_SSN
					 , PHONE
					 , EMAIL
					 , ADDRESS
					 , GENDER)
			  VALUES(SEQ_MEMBER.NEXTVAL
			  	   , #{userId}
			  	   , #{userNickname}
				   , #{userPwd}
				   , #{userName}
				   , #{userSsn}
				   , #{phone}
				   , #{email}
				   , #{address}
				   , #{gender})
	</insert>
	
	<!-- 아이디 찾기 쿼리문 -->
	<select id="foundId" parameterType="string" resultMap="memberResultSet">
		SELECT *
		  FROM MEMBER
		 WHERE USER_NAME = #{userName}
		   AND EMAIL = #{email}
	</select>
	
	<!-- 비번 찾기 쿼리문 -->
	<select id="foundPwd" parameterType="string" resultMap="memberResultSet">
		SELECT *
		  FROM MEMBER
		 WHERE USER_Id = #{userId}
		   AND EMAIL = #{email}
	</select>
	
	<!-- 회원 정보 수정용 쿼리문 -->
	<update id="updateMember" parameterType="member">
		UPDATE MEMBER
		   SET USER_ID = #{userId}
		   	 , USER_PWD = #{userPwd}
		   	 , USER_NAME = #{userName}
			 , USER_NICKNAME = #{userNickname}
			 , EMAIL = #{email}
			 , PHONE = #{phone}
			 , ADDRESS = #{address}
			 , FILE_PATH = #{filePath}
		 WHERE USER_NO = #{userNo}
	</update>
	
	<!-- 회원 탈퇴용 쿼리문 -->
	<update id="deleteMember" parameterType="member">
		UPDATE MEMBER
			  SET STATUS = 'N'
		WHERE USER_ID = #{userId}
	</update>
	
	<!-- 펫추가 기능 -->
	<insert id="petInsert" parameterType="dog">
	INSERT INTO DOG(DOG_NO
				  , DOG_NAME
				  , DOG_GENDER
				  , DOG_BREED
				  , DOG_BIRTHDAY
				  , DOG_WEIGHT
				  , NEUTRALIZATION_STATUS
				  , DOG_NOTE
				  , FILE_PATH
				  , USER_NO)
			  VALUES(SEQ_DOG.NEXTVAL
			  	   , #{dogName}
			  	   , #{dogGender}
				   , #{dogBreed}
				   , #{dogBirthday}
				   , #{dogWeight}
				   , #{neutralizationStatus}
				   , #{dogNote}
				   , #{filePath}
				   , #{userNo})
	</insert>
	
	<!-- 펫 총 개수 구하는 쿼리문 -->
	<select id="selectListCount" resultType="_int">
		SELECT COUNT(*)
		   FROM DOG
		WHERE STATUS = 'Y'
		  AND USER_NO = #{userNo}
	</select>
	
	<!-- 펫 전체리스트 쿼리문 -->
	<select id="petListView" resultMap="dogResultSet">
		SELECT	DOG_NO
			  , DOG_NAME
			  , DOG_GENDER
			  , DOG_WEIGHT
			  , DOG_BIRTHDAY
			  , FILE_PATH
		  FROM DOG
		WHERE STATUS = 'Y'
		  AND USER_NO = #{userNo}
		ORDER BY DOG_NO DESC
	</select>
	
	<!-- 펫 상세조회 쿼리문 -->
	<select id="petDetailView" parameterType="_int" resultMap="dogResultSet">
		SELECT	DOG_NO
			  , DOG_NAME
			  , DOG_GENDER
			  , DOG_BREED
			  , DOG_BIRTHDAY
			  , DOG_WEIGHT
			  , NEUTRALIZATION_STATUS
			  , FILE_PATH
			  , DOG_NOTE
		   FROM DOG
		  WHERE DOG_NO = #{dogNo}
	</select>
	
	<!-- 펫 정보 수정용 쿼리문 -->
	<update id="petUpdate" parameterType="dog">
		UPDATE DOG
		   SET DOG_NAME = #{dogName}
			 , DOG_GENDER = #{dogGender}
			 , DOG_BREED = #{dogBreed}
			 , DOG_BIRTHDAY = #{dogBirthday}
			 , DOG_WEIGHT = #{dogWeight}
			 , NEUTRALIZATION_STATUS = #{neutralizationStatus}
			 , DOG_NOTE = #{dogNote}
			 , FILE_PATH = #{filePath}
		 WHERE DOG_NO = #{dogNo}
	</update>
	
	<!-- 펫 등록해지 쿼리문 -->
	<update id="petDelete" parameterType="_int">
		UPDATE DOG
			  SET STATUS = 'N'
		WHERE DOG_NO = #{dogNo}
	</update>
	
	
	<!-- 아이디 중복체크용 쿼리문 -->
	<select id="idCheck" parameterType="string" resultType="_int">
		SELECT COUNT(*)
		  FROM MEMBER
		WHERE USER_ID = #{checkId}
	</select>
	
	<!-- 펫시터 찜 목록 개수 구하는 쿼리문 -->
	<select id="selectLikeListCount" resultType="_int">
		SELECT COUNT(*)
		   FROM P_LIKE
		WHERE USER_NO = #{userNo}
	</select>

	<select id="selectLikeList" parameterType="_int" resultMap="petSitterResultSet">
		SELECT P.P_NO, P.P_TITLE, P.P_CONTENT, M.USER_NAME, M.ADDRESS, M.FILE_PATH
		FROM PETSITTER P
		JOIN P_LIKE L ON P.P_NO = L.REF_PNO
		JOIN MEMBER M ON P.USER_NO = M.USER_NO
		WHERE L.USER_NO = #{userNo}
	</select>
	
	<!-- 내 게시글 목록 개수 구하는 쿼리문 -->
	<select id="selectMyBoardListCount" resultType="_int">
		SELECT COUNT(*)
		   FROM BOARD
		WHERE USER_NO = #{userNo}
	</select>
	
	<select id="selectMyBoardList" parameterType="_int" resultMap="boardResultSet">
		SELECT B.B_NO
		     , B.B_TITLE
		     , B.COUNT
		     , TO_CHAR(B.CREATE_DATE, 'YYYY-MM-DD') AS "CREATE_DATE"
		     , COUNT(R.REP_NO) AS REPLY_COUNT
		FROM BOARD B
		LEFT JOIN REPLY R ON B.B_NO = R.REF_BNO
		WHERE B.USER_NO = #{userNo}
		GROUP BY B.B_NO, B.B_TITLE, B.COUNT, B.CREATE_DATE
        ORDER BY B.B_NO DESC
	</select>
	
	<!-- 채팅방 정보 업데이트용 -->
	<update id="updateUserRoom" parameterType="member">
		UPDATE CHAT_ROOM
		SET USER_NICKNAME = #{userNickname}
		    , USER_PIC = #{filePath}
		WHERE USER_NO = #{userNo}
	</update>
	
	<update id="updateMasterRoom" parameterType="member">
		UPDATE CHAT_ROOM
		SET MASTER_NICKNAME = #{userNickname}
		    , MASTER_PIC = #{filePath}
		WHERE MASTER_NO = #{userNo}
	</update>
	


</mapper>













